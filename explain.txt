async function handleSubscriptionUpdated(event: Stripe.Event) {
  console.log(`subscription udpated ================================`);
  console.log(event);
  console.log(`subscription udpated ================================`);
  const {
    cancel_at,
    id,
    status,
    current_period_end,
    current_period_start,

    items,
  } = event.data.object as Stripe.Subscription;

  const subscription = await getBySubscriptionId(id);
  if (subscription) {
    const priceId = items.data.length > 0 ? items.data[0].plan?.id : '';
    await prisma.subscriptions.updateMany({
      where: { stripe_subscriptionId: id },
      data: {
        start_date: current_period_start
          ? new Date(current_period_start * 1000)
          : undefined,
        end_date: current_period_end
          ? new Date(current_period_end * 1000)
          : undefined,
        stripe_priceId: priceId,
        cancelAt: new Date((cancel_at as any) * 1000),
        status: status === 'active',
      },
    });
  }
}